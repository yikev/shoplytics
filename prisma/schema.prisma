// prisma/schema.prisma
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Tenant {
  id        String    @id @default(cuid())
  name      String
  createdAt DateTime  @default(now())
  users     User[]
  products  Product[]
  customers Customer[]
  orders    Order[]
}

model User {
  id       String  @id @default(cuid())
  email    String  @unique
  role     String
  tenantId String
  tenant   Tenant  @relation(fields: [tenantId], references: [id])
}

model Product {
  id         String   @id @default(cuid())
  tenantId   String
  tenant     Tenant   @relation(fields: [tenantId], references: [id])
  sku        String?
  title      String
  price      Decimal  @db.Decimal(10, 2)
  cost       Decimal  @db.Decimal(10, 2)
  inventory  Int
  tags       String[]
  createdAt  DateTime @default(now())
  orderItems OrderItem[]
}

model Customer {
  id          String   @id @default(cuid())
  tenantId    String
  tenant      Tenant   @relation(fields: [tenantId], references: [id])
  email       String   @unique
  firstName   String?
  lastName    String?
  totalSpent  Decimal  @db.Decimal(12, 2)
  ordersCount Int
  createdAt   DateTime @default(now())
  orders      Order[]
}

model Order {
  id         String     @id @default(cuid())
  tenantId   String
  tenant     Tenant     @relation(fields: [tenantId], references: [id])
  customerId String?
  customer   Customer?  @relation(fields: [customerId], references: [id])
  subtotal   Decimal    @db.Decimal(12, 2)
  tax        Decimal    @db.Decimal(12, 2)
  shipping   Decimal    @db.Decimal(12, 2)
  total      Decimal    @db.Decimal(12, 2)
  createdAt  DateTime   @default(now())
  items      OrderItem[]
}

model OrderItem {
  id        String  @id @default(cuid())
  orderId   String
  order     Order   @relation(fields: [orderId], references: [id])
  productId String
  product   Product @relation(fields: [productId], references: [id])
  quantity  Int
  unitPrice Decimal @db.Decimal(10, 2)
  discount  Decimal @db.Decimal(10, 2)
}